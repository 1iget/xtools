{% extends 'base.html.twig' %}
{% import 'macros/layout.html.twig' as layout %}
{% import 'macros/wiki.html.twig' as wiki %}
{% import 'macros/pieChart.html.twig' as pie %}

{% block body %}
<div class="panel panel-primary">
    <header class="panel-heading">
        <div class="text-center xt-heading-top">
            <a class="back-to-search" href="{{ path('sc') }}">
                <span class="glyphicon glyphicon-chevron-left"></span>
                {{ msg('back') }}
            </a>
            {{ wiki.userLink(user, project) }}
            <small>
                &bull;
                {{ project.domain }}
            </small>
        </div>
    </header>

    <div class="panel-body xt-panel-body">
        <p class="text-center xt-heading-subtitle">
            {{ wiki.userLogLink(user, project, msg('block-log'), 'block') }}
            &middot;
            <a href="{{ path('EditCounterResult', {project:project.domain, username:user.username}) }}" >{{ msg('tool-ec') }}</a>
            {% if isWMFLabs() %}
                &middot;
                <a target="_blank" href="//tools.wmflabs.org/guc/?user={{ user.username }}" >{{ msg('global-contribs') }}</a>
                &middot;
                <a target="_blank" href="//tools.wmflabs.org/pageviews/?project={{ project.domain }}&amp;pages=User:{{ user.username }}">{{ msg('pageviews-userpage') }}</a>
            {% endif %}
        </p>

        {% set content %}
            <div class="col-lg-6 stat-list clearfix">
            </div>
        {% endset %}
        {{ layout.content_block('summary', content) }}

        {% for type in data|keys %}
            {% set content %}
                {# TODO: Pie chart here #}
                <div class="col-lg-6 stat-list clearfix">
                    <table class="table"><tbody>
                        <tr>
                            <td>{{ msg('considered-usernames') }}</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>{{ msg('rfx-total-votes') }}</td>
                            <td>
                                {{ totals[type].total|number_format }}
                            </td>
                        </tr>
                        {% for voteType in data[type]|keys %}
                            {% set count = totals[type][voteType] is defined ? totals[type][voteType]|number_format : 0 %}
                            <tr>
                                <td>{{ msg(voteType) }}</td>
                                <td>
                                    {{ count }} ({{ count|percent_format(totals[type].total) }})
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody></table>
                </div>

                {% for vote in data[type]|keys %}
                    <h3 style="clear:both">{{ vote|title }}</h3>
                    <table class="table table-bordered table-hover table-striped">
                        <thead>
                            {% for key in ['index', 'date', 'rfx-tally', 'user'] %}
                                <th>
                                    <span class="sort-link sort-link--{{ key }}" data-column="{{ key }}">
                                        {% if key == 'index' %}
                                            #
                                        {% else %}
                                            {{ msg(key)|capitalize_first }}
                                        {% endif %}
                                        <span class="glyphicon glyphicon-sort"></span>
                                    </span>
                                </th>
                            {% endfor %}
                        </thead>
                        {% for pagename in data[type][vote]|keys %}
                            {% set parsedData = data[type][vote][pagename] %}
                            <tr>
                                <td class="sort-entry--index linked" data-value="{{ loop.index }}">{{ loop.index }}</td>
                                <td class="sort-entry--date linked" data-value="{{ parsedData.Date }}">
                                    {{ parsedData.Date }}
                                </td>
                                {# FIXME: assume support/oppose/neutral sections #}
                                {% set tally = parsedData.Support + parsedData.Oppose + parsedData.Neutral %}
                                <td class="sort-entry--rfx-tally linked" data-value="{{ tally }}">
                                    <span class="text-success">{{ parsedData.Support }}</span> /
                                    <span class="text-danger">{{ parsedData.Oppose }}</span> /
                                    <span class="text-muted">{{ parsedData.Neutral }}</span>
                                </td>
                                <td class="sort-entry--user" data-value="{{ parsedData.name }}">
                                    {{ wiki.pageLinkRaw(pagename, project, parsedData.name) }}
                                </td>
                            </tr>
                        {% endfor %}
                    </table>
                {% endfor %}
            {% endset %}
            {{ layout.content_block(type, content, '', type, true) }}
        {% endfor %}
    </div>
</div>
{% endblock %}