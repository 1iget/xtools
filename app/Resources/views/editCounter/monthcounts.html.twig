{% extends is_sub_request ? 'subrequest.html.twig' : 'base.html.twig' %}

{% block body %}

{% if not project.userHasOptedIn(user) %}
    <div class="alert alert-info">
        <p>{{ msg('not-opted-in', [wiki_link(project.userOptInPage(user), project.url~project.articlePath)]) }}</p>
    </div>
{% else %}

<canvas id="monthcounts-bar-chart"></canvas>
<script type="text/javascript">
    new Chart($("#monthcounts-bar-chart"), {
        type: 'bar',
        data: {
            labels: [
                {%- for year in ec.monthCounts.min_year .. ec.monthCounts.max_year -%}
                    {%- for month in 1..12 -%}
                        "{{ year }}/{{ '%02d'|format(month) }}"
                        {%- if not loop.last %},{% endif %}
                    {%- endfor -%}
                    {%- if not loop.last %},{% endif %}
                {%- endfor -%}
            ],
            datasets: [
                {% for ns_id,dataset in ec.monthCounts.totals %}
                {
                    label: "{{ attribute(project.namespaces, ns_id) }}",
                    backgroundColor: "{{ color(ns_id) }}",
                    data: [
                        {% for year in ec.monthCounts.min_year .. ec.monthCounts.max_year %}
                            {%- for month in 1..12 -%}
                                {{- attribute(dataset, year~month) -}}
                                {%- if not loop.last %},{% endif %}
                            {%- endfor -%}
                            {%- if not loop.last %},{% endif -%}
                        {%- endfor -%}
                    ]
                }{% if not loop.last %},{% endif %}
                {% endfor %}
            ]
        },
        options: {
            scales: {
                yAxes: [{
                    stacked: true
                }],
                xAxes: [{
                    stacked: true,
                    ticks: {
                        callback: function(value, index, values) {
                            return (index % 12 == 0) ? value : '';
                        }
                    }
                }]
            }
        }
    });
</script>

{% endif %}

{% endblock %}
