{% extends is_sub_request ? 'subrequest.html.twig' : 'base.html.twig' %}
{% import 'macros/wiki.html.twig' as wiki %}

{% block body %}

{% if not is_sub_request %}
    <div class="panel panel-primary">
        <header class="panel-heading">
            <div class="text-center xt-heading-top">
                <a class="back-to-search" href="{{ path('ec') }}">
                    <span class="glyphicon glyphicon-chevron-left"></span>
                    {{ msg('back') }}
                </a>
                {{ wiki.userLink(user, project) }}
                <small> &bull; {{ project.title }} </small>
            </div>
        </header>
        <div class="panel-body xt-panel-body">
            <section class="panel panel-default clearfix">
                <header class="panel-heading col-lg-12">
                    <h4>{{ msg('year-counts') }}</h4>
                </header>
                <div class="panel-body col-lg-12">
{% endif %}

{# 8 * year count seems to be the magic equation for the height (minimum 28) #}
<canvas id="yearcounts-canvas" height="{{ max(8 * ec.yearCounts.yearLabels|length, 28) }}"></canvas>
<script type="text/javascript">
    $(function() {
        var datasets = [];
        {% for nsId,namespaceData in ec.yearCounts.totals %}
            var dataset = {
                label: "{{ nsName(nsId, project.namespaces) }}",
                backgroundColor: "{{ color(nsId) }}",
                data: [],
            };

            {% for year,yearData in namespaceData %}
                dataset.data.push({{ yearData }});
            {%- endfor -%}

            datasets.push(dataset);
        {% endfor %}

        new Chart($("#yearcounts-canvas"), {
            type: 'horizontalBar',
            data: {
                labels: {{ ec.monthCounts.yearLabels|json_encode|raw }},
                datasets: datasets
            },
            options: {
                tooltips: {
                    intersect: true
                },
                responsive: true,
                scales: {
                    xAxes: [{
                        stacked: true,
                        ticks: {
                            beginAtZero: true,
                            callback: function(value, index, values) {
                                if (Math.floor(value) === value) {
                                    return value;
                                }
                            }
                        }
                    }],
                    yAxes: [{
                        stacked: true
                    }]
                }
            }
        });
    });
</script>

{% if not is_sub_request %}
    </div></section></div></div>
{% endif %}

{% endblock %}
